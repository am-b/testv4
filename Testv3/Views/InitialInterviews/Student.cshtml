@model Testv3.Models.StudentInterviewViewModel

@{
    ViewBag.Title = "Answer the Initial Interview";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <br />
    <div class="body-content">
        <div class="form-horizontal">
            <div class="form-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="form-group">
                                    <div class="controls form-inline">
                                        <br />              
                                            @Html.Label("Student Name: ")
                                            @Html.DisplayFor(model => model.StudentLastName), @Html.DisplayFor(model => model.StudentFirstName) @Html.DisplayFor(model => model.StudentMiddleName)                                     
                                            <br />
                                            @Html.Label("Student Number: ")
                                            @Html.DisplayFor(model => model.StudentID)
                                            <br />
                                            @Html.Label("Program: ")
                                            @Html.DisplayFor(model => model.Program)
                                        </div>
                                </div>
                            </div>
                        </div>
                    
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.ReasonForProgram, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.ReasonForProgram, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.ReasonForProgram, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.ReasonForMMCC, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.ReasonForMMCC, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.ReasonForMMCC, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.CollegeLifeAdjustments, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.CollegeLifeAdjustments, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.CollegeLifeAdjustments, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.ChoiceOfProgramAdjustments, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.ChoiceOfProgramAdjustments, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.ChoiceOfProgramAdjustments, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.PeersAdjustments, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.PeersAdjustments, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.PeersAdjustments, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.MMCCStaffAdjustments, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.MMCCStaffAdjustments, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.MMCCStaffAdjustments, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>
                    <br />
                    <div class="controls form-inline">
                        @Html.LabelFor(model => model.FamilyAdjustments, htmlAttributes: new { @class = "control-label" })<br />
                        @Html.ValidationMessageFor(model => model.FamilyAdjustments, "", new { @class = "text-danger" })<br />
                        @Html.TextAreaFor(model => model.FamilyAdjustments, 4, 100, new { @class = "form-control", @style = "min-width: 70%;" })
                        
                    </div>                    
                    </div>
                </div>
                </div>

            <div class="form-group">
                <div class="col-md-4 col-md-offset-5">
                    <input type="submit" value="Save" class="btn btn-default" />
                    @Html.ActionLink("Back", "Index", "Home", null, new { @class = "btn btn-default" })
                </div>
            </div>

            </div>
        </div>
}   
