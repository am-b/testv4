@model PagedList.IPagedList<Testv3.Models.ExpandedUserDTO>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewBag.Title = "Manage user accounts";
}
@if (TempData["Message"] != null)
    {
    <br />
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>@TempData["Message"]</strong>
        </div>
}

<br />
<div >
        <div class="controls form-inline">
            @Html.TextBox("searchStringUserNameOrEmail", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search by email or usename" })
            <input type="submit" value="Search" class="btn btn-default" />
                <div style="float:right;">
                    @Html.ActionLink("Create New User", "Create", null, new { @class = "btn btn-default" })
                    @Html.ActionLink("Edit Roles", "ViewAllRoles", null, new { @class = "btn btn-default" })
                </div>
        </div>  
</div>
    
<br />
@using (Html.BeginForm("Index", "Admin", FormMethod.Get))
{

    
}
<br />

<table class="table">
    <tr>
        <th>
            Email
        </th>
        <th>
            Locked Out
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.LockoutEndDateUtc)
            </td>
            <td>
                @Html.ActionLink("Details", "", new { UserName = item.UserName }) |
                @Html.ActionLink("Edit", "EditUser", new { UserName = item.UserName }) |
                @if ((item.UserName.ToLower() != this.User.Identity.Name.ToLower()))
                {
                    @Html.ActionLink("Delete", "DeleteUser", new { UserName = item.UserName },
                    new { onclick = "return confirm('Are you sure you wish to delete this user?');" })
                }
            </td>
        </tr>
    }


</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model,
    page => Url.Action("Index",
    new { page,
        searchStringUserNameOrEmail = ViewBag.searchStringUserNameOrEmail,
        currentFilter = ViewBag.CurrentFilter }))
<hr />
