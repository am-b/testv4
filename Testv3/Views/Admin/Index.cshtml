@model PagedList.IPagedList<Testv3.Models.ExpandedUserDTO>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewBag.Title = "Manage user accounts";
}
@if (TempData["Message"] != null)
    {
    <br />
        <div class="alert alert-success alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>@TempData["Message"]</strong>
        </div>
}
@if (TempData["Error"] != null)
{
    <br />
    <div class="alert alert-success alert-dismissable">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>@TempData["Error"]</strong>
    </div>
}

<br />
@using (Html.BeginForm("Index", "Admin", FormMethod.Get))
{
    <br />
    <div>
        <div class="controls form-inline">
            @Html.TextBox("searchStringUserNameOrEmail", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search by email or usename" })
            <input type="submit" value="Search" class="btn btn-default" />
            <div style="float:right;">
                @Html.ActionLink("Upload New Users", "CreateMultiple", null, new { @class = "btn btn-default" }) 
                @Html.ActionLink("Create New User", "Create", null, new { @class = "btn btn-default" })
                @Html.ActionLink("Edit Roles", "ViewAllRoles", null, new { @class = "btn btn-default" })
                @Html.ActionLink("Update Students via Upload", "UpdateMultiple", null, new { @class = "btn btn-default" })
                @Html.ActionLink("View Students", "ViewStudents", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>

    <br />

}
<br />

<table class="table">
    <tr>
        <th>
            Email
        </th>
        <th>
            Locked Out
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.LockoutEndDateUtc)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditUser", new { UserName = item.UserName }) |
                @if ((item.UserName.ToLower() != this.User.Identity.Name.ToLower()))
                {
                    @Html.ActionLink("Delete", "DeleteUser", new { UserName = item.UserName },
                    new { onclick = "return confirm('Are you sure you wish to delete this user?');" })
                }
                @*
                    Pass data to the showModal method as key value pairs. For eg: showModal({foo: 'hello', bar: 'world'})
                    
                    <script> 
                        function showModal(data)
                        {
                            data.foo = ...
                            data.bar = ...
                        }
                    </script>
                *@
                <a href="javascript:showModal({fname: '@item.StudentFirstName', lname: '@item.StudentLastName', email: '@item.UserName'})">New!!</a>
            </td>
        </tr>
    }


</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model,
    page => Url.Action("Index",
    new { page,
        searchStringUserNameOrEmail = ViewBag.searchStringUserNameOrEmail,
        currentFilter = ViewBag.CurrentFilter }))
<hr />

<div id="myModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="123test"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function showModal(data) {
        console.log(data.fname + data.lname);
        var modalBody = document.getElementById('123test');
        modalBody.innerHTML = data.fname + "<br />" + data.lname + "<br />" + data.email;
        //currently fname and lname will be empty because you are not setting them in your controller. Set them in your controller and you will be able to see them here
        $('#myModal').modal('show');
    }
</script>